From 60e2f1fdfb2493c250309e454cc2b3dcd51cfb4c Mon Sep 17 00:00:00 2001
From: John Johansen <john.johansen@canonical.com>
Date: Tue, 6 Oct 2020 14:01:04 -0700
Subject: [PATCH 08/16] UBUNTU: SAUCE: apparmor: rename aa_sock() to
 aa_unix_sk()

The LSM stacking patches introduce and use a macro aa_sock
which conflicts with the apparmor unix mediation patches. Rename
aa_sock() in apparmor to avoid a conflict.

Signed-off-by: John Johansen <john.johansen@canonical.com>
Acked-by: Andrea Righi <andrea.righi@canonical.com>
Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
---
 security/apparmor/af_unix.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/security/apparmor/af_unix.c b/security/apparmor/af_unix.c
index 54b3796f63d0..5c05d3114f54 100644
--- a/security/apparmor/af_unix.c
+++ b/security/apparmor/af_unix.c
@@ -22,7 +22,7 @@
 #include "include/policy.h"
 #include "include/cred.h"
 
-static inline struct sock *aa_sock(struct unix_sock *u)
+static inline struct sock *aa_unix_sk(struct unix_sock *u)
 {
 	return &u->sk;
 }
@@ -32,7 +32,7 @@ static inline int unix_fs_perm(const char *op, u32 mask, struct aa_label *label,
 {
 	AA_BUG(!label);
 	AA_BUG(!u);
-	AA_BUG(!UNIX_FS(aa_sock(u)));
+	AA_BUG(!UNIX_FS(aa_unix_sk(u)));
 
 	if (unconfined(label) || !LABEL_MEDIATES(label, AA_CLASS_FILE))
 		return 0;
@@ -547,9 +547,9 @@ int aa_unix_peer_perm(struct aa_label *label, const char *op, u32 request,
 	AA_BUG(!sk);
 	AA_BUG(!peer_sk);
 
-	if (UNIX_FS(aa_sock(peeru)))
+	if (UNIX_FS(aa_unix_sk(peeru)))
 		return unix_fs_perm(op, request, label, peeru, 0);
-	else if (UNIX_FS(aa_sock(u)))
+	else if (UNIX_FS(aa_unix_sk(u)))
 		return unix_fs_perm(op, request, label, u, 0);
 	else {
 		struct aa_profile *profile;
-- 
2.32.0

